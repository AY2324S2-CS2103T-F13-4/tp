<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="seedu.address.model.student.UniqueStudentListTest" tests="23" skipped="0" failures="0" errors="0" timestamp="2024-04-03T09:48:36" hostname="evelyns-air-3.lan" time="0.02">
  <properties/>
  <testcase name="asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.001"/>
  <testcase name="setStudent_targetStudentNotInList_throwsStudentNotFoundException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.001"/>
  <testcase name="contains_nullStudent_throwsNullPointerException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.001"/>
  <testcase name="contains_studentInList_returnsTrue()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.0"/>
  <testcase name="remove_studentDoesNotExist_throwsStudentNotFoundException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.0"/>
  <testcase name="setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.0"/>
  <testcase name="toStringMethod()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.0"/>
  <testcase name="setStudent_editedStudentIsSameStudent_success()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.0"/>
  <testcase name="setStudent_nullEditedStudent_throwsNullPointerException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.0"/>
  <testcase name="contains_studentNotInList_returnsFalse()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.0"/>
  <testcase name="setStudents_nullUniqueStudentList_throwsNullPointerException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.001"/>
  <testcase name="add_duplicateStudent_throwsDuplicateStudentException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.001"/>
  <testcase name="setStudent_editedStudentHasSameIdentity_success()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.001"/>
  <testcase name="setStudent_editedStudentHasDifferentIdentity_success()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.0"/>
  <testcase name="setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.0"/>
  <testcase name="setStudents_list_replacesOwnListWithProvidedList()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.0"/>
  <testcase name="remove_existingStudent_removesStudent()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.001"/>
  <testcase name="add_nullStudent_throwsNullPointerException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.001"/>
  <testcase name="remove_nullStudent_throwsNullPointerException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.001"/>
  <testcase name="setStudents_listWithDuplicateStudents_throwsDuplicateStudentException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.001"/>
  <testcase name="contains_studentWithSameIdentityFieldsInList_returnsTrue()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.0"/>
  <testcase name="setStudents_nullList_throwsNullPointerException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.0"/>
  <testcase name="setStudent_nullTargetStudent_throwsNullPointerException()" classname="seedu.address.model.student.UniqueStudentListTest" time="0.001"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
